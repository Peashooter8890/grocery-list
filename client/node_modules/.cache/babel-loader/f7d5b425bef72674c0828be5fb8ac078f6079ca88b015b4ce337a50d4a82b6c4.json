{"ast":null,"code":"var _jsxFileName = \"/Users/markbu/code/projects/grocery-list/client/src/components/GroceryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroceryList = () => {\n  _s();\n  const [groceryList, setGroceryList] = useState([]);\n  const addGroceryItem = () => {\n    setGroceryList([...groceryList, {\n      id: uuidv4(),\n      name: ''\n    }]);\n  };\n  const removeGroceryItem = id => {\n    setGroceryList(groceryList.filter(item => item.id !== id));\n  };\n  const handleInputChange = (id, newName) => {\n    setGroceryList(groceryList.map(item => item.id === id ? {\n      ...item,\n      name: newName\n    } : item));\n  };\n  const handleDragEnd = result => {\n    // make item return to original position if it was dropped outside of list\n    if (!result.destination) return;\n    // make shallow copy of groceryList. this is because directly updating states during calculation is bad practice (I think)\n    const items = Array.from(groceryList);\n    // remove and extract the dragged item from the list\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    // insert the dragged item into the newly dropped location (dnd library stores this in result.destination.index)\n    items.splice(result.destination.index, 0, reorderedItem);\n    // calculation is over, so we can setState now. \n    setGroceryList(items);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"groceryList\",\n        children: provided =>\n        /*#__PURE__*/\n        /**/\n        _jsxDEV(\"ul\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [groceryList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: item.name,\n                onChange: e => handleInputChange(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeGroceryItem(item.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGroceryItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(GroceryList, \"satH1oHSSmRWWdPLr4fYqOFVj6U=\");\n_c = GroceryList;\nexport default GroceryList;\nvar _c;\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"names":["React","useState","v4","uuidv4","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","GroceryList","_s","groceryList","setGroceryList","addGroceryItem","id","name","removeGroceryItem","filter","item","handleInputChange","newName","map","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","children","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/markbu/code/projects/grocery-list/client/src/components/GroceryList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\n\nconst GroceryList = () => {\n    const [groceryList, setGroceryList] = useState([]);\n\n    const addGroceryItem = () => {\n        setGroceryList([...groceryList, { id: uuidv4(), name: '' }]);\n    };\n\n    const removeGroceryItem = (id) => {\n        setGroceryList(groceryList.filter((item) => item.id !== id));\n    };\n\n    const handleInputChange = (id, newName) => {\n        setGroceryList(groceryList.map(item => item.id === id ? {...item, name: newName} : item));\n    };\n\n    const handleDragEnd = (result) => {\n        // make item return to original position if it was dropped outside of list\n        if (!result.destination) return; \n        // make shallow copy of groceryList. this is because directly updating states during calculation is bad practice (I think)\n        const items = Array.from(groceryList);\n        // remove and extract the dragged item from the list\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        // insert the dragged item into the newly dropped location (dnd library stores this in result.destination.index)\n        items.splice(result.destination.index, 0, reorderedItem);\n        // calculation is over, so we can setState now. \n        setGroceryList(items);\n    };\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"groceryList\">\n                    {(provided) => (\n                        /**/\n                        <ul {...provided.droppableProps} ref={provided.innerRef}>\n                            {groceryList.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                    {(provided) => (\n                                        <li\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                            {...provided.dragHandleProps}\n                                        >\n                                            <input \n                                                value={item.name} \n                                                onChange={(e) => handleInputChange(item.id, e.target.value)} \n                                            />\n                                            <button onClick={() => removeGroceryItem(item.id)}>Remove</button>\n                                        </li>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </ul>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <button onClick={addGroceryItem}>Add Item</button>\n        </div>\n    );\n};\n\nexport default GroceryList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}