{"ast":null,"code":"var _jsxFileName = \"/Users/markbu/code/projects/grocery-list/client/src/components/GroceryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroceryList = () => {\n  _s();\n  const [groceryList, setGroceryList] = useState([]);\n  const addGroceryItem = () => {\n    setGroceryList([...groceryList, {\n      id: uuidv4(),\n      name: ''\n    }]);\n  };\n  const removeGroceryItem = id => {\n    setGroceryList(groceryList.filter(item => item.id !== id));\n  };\n  const handleDragEnd = result => {\n    // make item return to original position if it was dropped outside of list\n    if (!result.destination) return;\n    // make shallow copy of groceryList. this is because directly updating states during calculation is bad practice (I think)\n    const items = Array.from(groceryList);\n    // remove and extract the dragged item from the list\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    // insert the dragged item into the newly dropped location (dnd library stores this in result.destination.index)\n    items.splice(result.destination.index, 0, reorderedItem);\n    // calculation is over, so we can setState now. \n    setGroceryList(items);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"groceryList\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [groceryItems, provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGroceryItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(GroceryList, \"satH1oHSSmRWWdPLr4fYqOFVj6U=\");\n_c = GroceryList;\nexport default GroceryList;\nvar _c;\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"names":["React","useState","v4","uuidv4","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","GroceryList","_s","groceryList","setGroceryList","addGroceryItem","id","name","removeGroceryItem","filter","item","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","children","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","groceryItems","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/markbu/code/projects/grocery-list/client/src/components/GroceryList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst GroceryList = () => {\n    const [groceryList, setGroceryList] = useState([]);\n\n    const addGroceryItem = () => {\n        setGroceryList([...groceryList, { id: uuidv4(), name: '' }]);\n    };\n\n    const removeGroceryItem = (id) => {\n        setGroceryList(groceryList.filter((item) => item.id !== id));\n    };\n\n    const handleDragEnd = (result) => {\n        // make item return to original position if it was dropped outside of list\n        if (!result.destination) return; \n        // make shallow copy of groceryList. this is because directly updating states during calculation is bad practice (I think)\n        const items = Array.from(groceryList);\n        // remove and extract the dragged item from the list\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        // insert the dragged item into the newly dropped location (dnd library stores this in result.destination.index)\n        items.splice(result.destination.index, 0, reorderedItem);\n        // calculation is over, so we can setState now. \n        setGroceryList(items);\n    };\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"groceryList\">\n                    {(provided) => (\n                        <ul {...provided.droppableProps} ref={provided.innerRef}>\n                            {groceryItems}\n                            {provided.placeholder}\n                        </ul>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <button onClick={addGroceryItem}>Add Item</button>\n        </div>\n    );\n};\n\nexport default GroceryList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,cAAc,GAAGA,CAAA,KAAM;IACzBD,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;MAAEG,EAAE,EAAEX,MAAM,CAAC,CAAC;MAAEY,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,iBAAiB,GAAIF,EAAE,IAAK;IAC9BF,cAAc,CAACD,WAAW,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChE,CAAC;EAED,MAAMK,aAAa,GAAIC,MAAM,IAAK;IAC9B;IACA,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IACzB;IACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACb,WAAW,CAAC;IACrC;IACA,MAAM,CAACc,aAAa,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5D;IACAN,KAAK,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IACxD;IACAb,cAAc,CAACU,KAAK,CAAC;EACzB,CAAC;EAED,oBACId,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACJ,eAAe;MAAC0B,SAAS,EAAEX,aAAc;MAAAU,QAAA,eACtCrB,OAAA,CAACH,SAAS;QAAC0B,WAAW,EAAC,aAAa;QAAAF,QAAA,EAC9BG,QAAQ,iBACNxB,OAAA;UAAA,GAAQwB,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAN,QAAA,GACnDO,YAAY,EACZJ,QAAQ,CAACK,WAAW;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAClBjC,OAAA;MAAQkC,OAAO,EAAE7B,cAAe;MAAAgB,QAAA,EAAC;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAvCID,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}